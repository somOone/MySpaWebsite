# Appointment Editing Validation Rules

## General Instruction
Always enforce and test these validation rules across all appointment editing code, including controllers, services, models, and test suites.  
Do not skip or bypass these rules unless explicitly instructed.

---
alwaysApply: true
---

## Required Fields Validation
- **Appointment ID**: Must be a valid, existing appointment ID
- **Category**: Must be one of: 'Facial', 'Massage', 'Facial + Massage'
- **Payment**: Automatically calculated based on category selection

---

## Status-Based Validation (Currently Implemented)
- **Can only edit pending appointments**: Only appointments with status = 'pending' can be edited
- **Cannot edit completed appointments**: Appointments with status = 'completed' cannot be edited
- **Cannot edit cancelled appointments**: Appointments with status = 'cancelled' cannot be edited

---

## Editable Fields (Currently Implemented)
- **Category**: User can change service category via dropdown selection
- **Payment**: Automatically updates when category changes (read-only display)
- **Tip**: Not editable (tips are only collected during completion)

---

## Automatic Price Updates (Currently Implemented)
- **Facial**: Automatically sets payment to $100.00
- **Massage**: Automatically sets payment to $120.00
- **Facial + Massage**: Automatically sets payment to $200.00
- **Price field**: Read-only display that updates in real-time when category changes

---

## User Interface Behavior (Currently Implemented)
- **Edit button**: Only visible for pending appointments
- **Category dropdown**: Shows current selection with all available options
- **Payment display**: Shows current amount with subtle gray styling to indicate read-only status
- **Tip display**: Shows current tip amount (read-only)
- **Action buttons**: Save and Cancel buttons appear during editing

---

## Confirmation Methods (Currently Implemented)
- **Save button**: User must click to confirm changes
- **Cancel button**: User can cancel editing and revert to original values
- **No auto-save**: Changes are only applied when Save is clicked

---

## Business Logic (Currently Implemented)
- **Status unchanged**: Editing does not modify appointment status
- **Timestamp update**: updated_at field is set to current timestamp when saved
- **Data integrity**: Only category and payment are updated, other fields remain unchanged
- **Validation**: Backend validates category and payment before saving

---

## Error Handling (Currently Implemented)
- **Invalid category**: Returns 400 if category is not one of the allowed values
- **System errors**: Returns 500 for database or system failures
- **Appointment not found**: Returns 404 if appointment ID doesn't exist
- **Frontend validation**: Prevents saving with invalid data

---

## Testing Requirements
When writing tests:
- Always include **valid** and **invalid** test cases for each validation rule
- Test all status combinations (pending, completed, cancelled)
- Test category changes and automatic price updates
- Test that only pending appointments can be edited
- Test save and cancel functionality
- Test error conditions and edge cases
- Verify that editing does not change appointment status
- Verify that updated_at timestamp is updated when changes are saved
description:
globs:
alwaysApply: false
---
